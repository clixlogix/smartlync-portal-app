import { AuthState } from 'services/auth';
import { MsgState } from 'services/msg';
import { ThemeState } from 'styles/theme/types';
import { FaultRatesState } from 'services/fault/fault-rate';
import { FaultCountsState } from 'services/fault/fault-count';
import { FaultCodesState } from 'services/fault/fault-code';
import { StudTypesState } from 'services/stud/stud-type';
import { DeviceNamesState } from 'services/device/device-name';
import { StudIdsState } from 'services/stud/stud-id';
import { FaultTypesState } from 'services/fault/fault-type';
import { RecommendedActionsState } from 'services/recommended-action/recommended-actions';
import { DashboardsState } from 'services/dashboard';
import { FileUploadsState } from 'services/file-upload';
import { PlantsState } from 'services/plant';
import { SystemOverviewsState } from 'services/system-overview';
import { RecommendedActionSubmitsState } from 'services/recommended-action/recommended-action-submit';
import { RecommendedActionsHistorysState } from 'services/recommended-action/recommended-actions-history';
import { FaultOccurrencesState } from 'services/plant-overview/fault-occurrence';
import { StudIdFaultsState } from 'services/plant-overview/stud-id-fault';
import { SystemFaultsState } from 'services/plant-overview/system-fault';
import { MtbfsState } from 'services/system-overview/mtbf';
import { TotalCyclesState } from 'services/plant-overview/total-cycle';
import { FaultFrequencysState } from 'services/SPR/plant-overview/fault-frequency';
import { LoginState } from 'services/login';
import { ProcessLogsState } from 'services/process-log';
import { StationAnomalyState } from 'services/station-anomaly';
import { TotalWeeklyAveragesState } from 'services/plant-overview/total-weekly-average';
import { EventDescFrequencysState } from 'services/event-desc-frequency';
import { EventCountFrequencyWidgetsState } from 'services/event-count-frequency-widget';
import { EventCountDailyFrequencysState } from 'services/event-count-daily-frequency';
import { OpportunityAnalysissState } from 'services/opportunity-analysis';
import { EventRateCycleCountsState } from 'services/event-rate-cycle-count';
import { EventRatePerEventsState } from 'services/event-rate-per-event';
import { EventRatePerDevicesState } from 'services/event-rate-per-device';
import { LiftsState } from 'services/lift';
import { PenetrationsState } from 'services/penetration';
import { VoltagesState } from 'services/voltage';
import { WeldTimesState } from 'services/weld-time';
import { ProcessOperationsState } from 'services/process-operation';
import { GetLastUpdatedsState } from 'services/get-last-updated';
import { ReportThresholdsState } from 'services/report-threshold';
import { TopFaultCountsState } from 'services/top-fault-count';
import { FaultReportsState } from 'services/fault-report';
import { CarBodyGraphsState } from 'services/car-body-graph';
import { CarBodyTablesState } from 'services/car-body-table';
import { FaultDurationsState } from 'services/plant-overview/fault-duration';
import { DurationOfFaultsState } from 'services/duration-of-faults';
import { TaAnalysisTablesState } from 'services/ta-analysis-table';
import { MtbfAnalysisTablesState } from 'services/mtbf-analysis-table';
import { PlantDeviceByDurationsState } from 'services/plant-device-by-duration';
import { MaintainanceActionTablesState } from 'services/maintainance-action-table';
import { UploadStatsState } from 'services/upload-stat';
import { LinesState } from 'services/line';
import { StationsState } from 'services/station';
import { operationsFormState } from 'services/operations-form/operations-form-reducer';
import { SettingssState } from 'services/settings';
import { CarTypesState } from 'services/car-type';
import { EventsState } from 'services/event';
import { WeeklyTasState } from 'services/weekly-ta';
import { TaPerFaultFrequencysState } from 'services/ta-per-fault-frequency';
import { TaTablesState } from 'services/ta-table';
import { MttrTablesState } from 'services/mttr-table';
import SaTablesState from 'services/sa-table';
import { MeasurementTrendsState } from 'services/measurement-trend';
import { FaultRateMeasurementTrendsState } from 'services/fault-rate-measurement-trend';
import { WopRateMeasurementTrendsState } from 'services/wop-rate-measurement-trend';
import { WeldingTimeMeasurementTrendsState } from 'services/welding-time-measurement-trend';
import { PenetrationMeasurementTrendsState } from 'services/penetration-measurement-trend';
import { StudProjectionMeasurementTrendsState } from 'services/stud-projection-measurement-trend';
import { LiftingHeightMeasurementTrendsState } from 'services/lifting-height-measurement-trend';
import { DropTimeMeasurementTrendsState } from 'services/drop-time-measurement-trend';
import { CycleGapsState } from 'services/cycle-gap';
import { CarbodyRisksState } from 'services/carbody-risk';
import { GraphicDatasState } from 'services/graphic-data';
import { CarBodyDurationWidgetsState } from 'services/car-body-duration-widget';
import { CarBodyDurationSecondaryWidgetsState } from 'services/car-body-duration-secondary-widget';
import { DailyFaultTrendsState } from 'services/daily-fault-trend';
import { RulesPanelState } from 'services/rules-panel';
import StationAvailabilityTrendsState from 'services/station-availability-trend';
import { DeviceAreaGraphsState } from 'services/device-area-graph';
import { ProbabilityDensityFunctionsState } from 'services/probability-density-function';
import { FleetExpandDeviceTablesState } from 'services/fleet-expand-device-table';
import { CycleGapMetaDatasState } from 'services/cycle-gap-meta-data';
import { MetaDataPanelsState } from 'services/meta-data-panel';
import { DateTimeFilterState } from 'services/date-time-reducer/date-time-reducer';
import { MeasurementsWidgetsState } from 'services/measurements-widget';
import { ProgramsState } from 'services/program';
import { FixedRangesState } from 'services/fixed-range';
import { HistoricalDiagnosticsState } from 'services/historical-diagnostic';
import { HistoricalDiagnosticGraphsState } from 'services/historical-diagnostic-graph';
import { FaultsPerDeviceHistogramsState } from 'services/faults-per-device-histogram';
import { ProcessLogSprsState } from 'services/process-log-spr';
import { TimeZonesState } from 'services/time-zone';
import { BreadcrumbsState } from 'services/breadcrumb';
import { TtrTablesState } from 'services/ttr-table';
import { CycleGapSprsState } from 'services/cycle-gap-spr';
import { CycleGapMetaDataSprsState } from 'services/cycle-gap-meta-data-spr';
import { DurationOfFaultsSprsState } from 'services/duration-of-faults-spr';
import { EventDescFrequencySprsState } from 'services/event-desc-frequency-spr';
import { PlantCycleAveragesWidgetSprsState } from 'services/SPR/plant-cycle-averages-widget-spr';
import { PlantCycleCountSprsState } from 'services/SPR/plant-cycle-count-spr';
import { PlantFaultFrequencySprsState } from 'services/SPR/plant-fault-frequency-spr';
import { PlantFaultByOccurenceSprsState } from 'services/SPR/plant-fault-by-occurence-spr';
import { PlantFaultByDurationSprsState } from 'services/SPR/plant-fault-by-duration-spr';
import { PlantFaultByStudTypeSprsState } from 'services/SPR/plant-fault-by-stud-type-spr';
import { PlantFaultByDevicesSprsState } from 'services/SPR/plant-fault-by-devices-spr';
import { PlantDeviceByDurationSprsState } from 'services/SPR/plant-device-by-duration-spr';
import { EventRateCycleCountSprsState } from 'services/event-rate-cycle-count-spr';
import { EventRatePerDeviceSprsState } from 'services/event-rate-per-device-spr';
import { EventRatePerEventSprsState } from 'services/event-rate-per-event-spr';
import { ReportingViewBsprsState } from 'services/SPR/reporting-view-bspr';
import { ReportingViewSprsState } from 'services/reporting-view-spr';
import { PenetrationSprsState } from 'services/SPR/penetration-spr';
import { LiftSprsState } from 'services/SPR/lift-spr';
import { VoltageSprsState } from 'services/SPR/voltage-spr';
import { WeldTimeSprsState } from 'services/SPR/weld-time-spr';
import { FaultsPerDeviceHistogramSprsState } from 'services/faults-per-device-histogram-spr';
import { TopFaultCountSprsState } from 'services/top-fault-count-spr';
import { EventCountFrequencySprWidgetsState } from 'services/event-count-frequency-spr-widget';
import { EventCountDailySprFrequencysState } from 'services/event-count-daily-spr-frequency';
import { MtbfAnalysisTableSprsState } from 'services/mtbf-analysis-table-spr';
import { MttrTableSprsState } from 'services/mttr-table-spr';
import { TtrTableSprsState } from 'services/ttr-table-spr';
import { TaAnalysisTableSprsState } from 'services/ta-analysis-table-spr';
import { TimeZoneSprsState } from 'services/time-zone-spr';
import { TaTableSprsState } from 'services/ta-table-spr';
import { SelectAggregateColumnsState } from 'services/select-aggregate-column';
import { MeasurementTrendWidgetsState } from 'services/measurement-trend-widget';
import { MeasurementAggregateWidgetsState } from 'services/measurement-aggregate-widget';
import { MeasurementAggregateSprWidgetsState } from 'services/measurement-aggregate-spr-widget';
import { MeasurementAggregateWidgetSprsState } from 'services/measurement-aggregate-widget-spr';
import { UserManagementWidgetsState } from 'services/user-management-widget';
import { EssentialControlWidgetssState } from 'services/essential-control-widgets';
import { DReportWidgetsState } from 'services/dreport-widget';
// [IMPORT NEW CONTAINERSTATE ABOVE] < Needed for generating containers seamlessly

/*
  Because the redux-injectors injects your reducers asynchronously somewhere in your code
  You have to declare them here manually
  Properties are optional because they are injected when the components are mounted sometime in your application's life.
  So, not available always
*/
export interface RootState {
    auth?: AuthState;
    theme?: ThemeState;
    msg?: MsgState;
    faultCodes?: FaultCodesState;
    faultRates?: FaultRatesState;
    faultCounts?: FaultCountsState;
    studTypes?: StudTypesState;
    deviceNames?: DeviceNamesState;
    studIds?: StudIdsState;
    faultTypes?: FaultTypesState;
    recommendedActions?: RecommendedActionsState;
    dashboards?: DashboardsState;
    fileUploads?: FileUploadsState;
    plants?: PlantsState;
    systemOverviews?: SystemOverviewsState;
    recommendedActionSubmits?: RecommendedActionSubmitsState;
    recommendedActionsHistorys?: RecommendedActionsHistorysState;
    faultOccurrences?: FaultOccurrencesState;
    studIdFaults?: StudIdFaultsState;
    systemFaults?: SystemFaultsState;
    // plantOverviews?: PlantOverviewsState;
    mtbfs?: MtbfsState;
    totalCycles?: TotalCyclesState;
    faultFrequencys?: FaultFrequencysState;
    login?: LoginState;
    processLogs?: ProcessLogsState;
    stationAnomaly?: StationAnomalyState;
    totalWeeklyAverages?: TotalWeeklyAveragesState;
    eventDescFrequencys?: EventDescFrequencysState;
    eventCountFrequencyWidgets?: EventCountFrequencyWidgetsState;
    eventCountDailyFrequencys?: EventCountDailyFrequencysState;
    opportunityAnalysiss?: OpportunityAnalysissState;
    eventRateCycleCounts?: EventRateCycleCountsState;
    eventRatePerEvents?: EventRatePerEventsState;
    eventRatePerDevices?: EventRatePerDevicesState;
    lifts?: LiftsState;
    penetrations?: PenetrationsState;
    voltages?: VoltagesState;
    weldTimes?: WeldTimesState;
    operationItems?: ProcessOperationsState;
    getLastUpdateds?: GetLastUpdatedsState;
    reportThresholds?: ReportThresholdsState;
    topFaultCounts?: TopFaultCountsState;
    faultReports?: FaultReportsState;
    carBodyGraphs?: CarBodyGraphsState;
    carBodyTables?: CarBodyTablesState;
    faultDurations?: FaultDurationsState;
    durationOfFaults?: DurationOfFaultsState;
    taAnalysisTables?: TaAnalysisTablesState;
    mtbfAnalysisTables?: MtbfAnalysisTablesState;
    plantDeviceByDurations?: PlantDeviceByDurationsState;
    operationsForm?: operationsFormState;
    settings?: SettingssState;
    uploadListItems?: UploadStatsState;
    maintainanceActionTables?: MaintainanceActionTablesState;
    lines?: LinesState;
    stations?: StationsState;
    events?: EventsState;
    weeklyTas?: WeeklyTasState;
    taPerFaultFrequencys?: TaPerFaultFrequencysState;
    taTables?: TaTablesState;
    mttrTables?: MttrTablesState;
    saTables?: SaTablesState;
    measurementTrends?: MeasurementTrendsState;
    faultRateMeasurementTrends?: FaultRateMeasurementTrendsState;
    wopRateMeasurementTrends?: WopRateMeasurementTrendsState;
    weldingTimeMeasurementTrends?: WeldingTimeMeasurementTrendsState;
    penetrationMeasurementTrends?: PenetrationMeasurementTrendsState;
    studProjectionMeasurementTrends?: StudProjectionMeasurementTrendsState;
    liftingHeightMeasurementTrends?: LiftingHeightMeasurementTrendsState;
    dropTimeMeasurementTrends?: DropTimeMeasurementTrendsState;
    cycleGaps?: CycleGapsState;
    carbodyRisks?: CarbodyRisksState;
    graphicDatas?: GraphicDatasState;
    carBodyDurationWidgets?: CarBodyDurationWidgetsState;
    carBodyDurationSecondaryWidgets?: CarBodyDurationSecondaryWidgetsState;
    dailyFaultTrends?: DailyFaultTrendsState;
    rulesPanel?: RulesPanelState;
    stationAvailabilityTrends?: StationAvailabilityTrendsState;
    carTypes?: CarTypesState;
    deviceAreaGraphs?: DeviceAreaGraphsState;
    probabilityDensityFunctions?: ProbabilityDensityFunctionsState;
    fleetExpandDeviceTables?: FleetExpandDeviceTablesState;
    cycleGapMetaDatas?: CycleGapMetaDatasState;
    metaDataPanels?: MetaDataPanelsState;
    dateTimeFilter: DateTimeFilterState;
    measurementsWidgets?: MeasurementsWidgetsState;
    programs?: ProgramsState;
    fixedRanges?: FixedRangesState;
    historicalDiagnostics?: HistoricalDiagnosticsState;
    historicalDiagnosticGraphs?: HistoricalDiagnosticGraphsState;
    faultsPerDeviceHistograms?: FaultsPerDeviceHistogramsState;
    processLogSprs?: ProcessLogSprsState;
    timeZones?: TimeZonesState;
    breadcrumbs?: BreadcrumbsState;
    ttrTables?: TtrTablesState;
    cycleGapSprs?: CycleGapSprsState;
    cycleGapMetaDataSprs?: CycleGapMetaDataSprsState;
    durationOfFaultsSprs?: DurationOfFaultsSprsState;
    eventDescFrequencySprs?: EventDescFrequencySprsState;
    plantCycleAveragesWidgetSprs?: PlantCycleAveragesWidgetSprsState;
    plantCycleCountSprs?: PlantCycleCountSprsState;
    plantFaultFrequencySprs?: PlantFaultFrequencySprsState;
    plantFaultByOccurenceSprs?: PlantFaultByOccurenceSprsState;
    plantFaultByDurationSprs?: PlantFaultByDurationSprsState;
    plantFaultByStudTypeSprs?: PlantFaultByStudTypeSprsState;
    plantFaultByDevicesSprs?: PlantFaultByDevicesSprsState;
    plantDeviceByDurationSprs?: PlantDeviceByDurationSprsState;
    eventRateCycleCountSprs?: EventRateCycleCountSprsState;
    eventRatePerDeviceSprs?: EventRatePerDeviceSprsState;
    eventRatePerEventSprs?: EventRatePerEventSprsState;
    reportingViewBsprs?: ReportingViewBsprsState;
    reportingViewSprs?: ReportingViewSprsState;
    penetrationSprs?: PenetrationSprsState;
    liftSprs?: LiftSprsState;
    voltageSprs?: VoltageSprsState;
    weldTimeSprs?: WeldTimeSprsState;
    faultsPerDeviceHistogramSprs?: FaultsPerDeviceHistogramSprsState;
    topFaultCountSprs?: TopFaultCountSprsState;
    eventCountFrequencySprWidgets?: EventCountFrequencySprWidgetsState;
    eventCountDailyFrequencySprs?: EventCountDailySprFrequencysState;
    mtbfAnalysisTableSprs?: MtbfAnalysisTableSprsState;
    mttrTableSors?: MttrTableSprsState;
    ttrTableSprs?: TtrTableSprsState;
    taAnalysisTableSprs?: TaAnalysisTableSprsState;
    timeZoneSprs?: TimeZoneSprsState;
    taTableSprs?: TaTableSprsState;
    selectAggregateColumns?: SelectAggregateColumnsState;
    measurementTrendWidgets?: MeasurementTrendWidgetsState;
    measurementAggregateWidgets?: MeasurementAggregateWidgetsState;
    measurementAggregateSprWidgets?: MeasurementAggregateSprWidgetsState;
    measurementAggregateWidgetSprs?: MeasurementAggregateWidgetSprsState;
    userManagementWidgets?: UserManagementWidgetsState;
    essentialControlWidgetss?: EssentialControlWidgetssState;
    dReportWidgets?: DReportWidgetsState;
    // [INSERT NEW REDUCER KEY ABOVE] < Needed for generating containers seamlessly
}
